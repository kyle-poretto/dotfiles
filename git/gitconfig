[user]
	name = kyle-poretto
	email = porettokyle@gmail.com
[color]
	ui = true
[alias]
  aa = add --all
  b = branch
  bhist = "!git --no-pager reflog $(git rev-parse --abbrev-ref HEAD)"
  bselect = "!branches=$(git branch) && branch=$(echo \"$branches\" | fzf --reverse +s +m) && git checkout $(echo \"$branch\" | sed \"s/.* //\")"
  bom = push --set-upstream origin master
  browse = "!hub browse"
  ca = commit --amend
  car = commit --amend --no-edit
  ci = "!gh ci-status -v | sed -E 's/.* (.*)$/\\1/' | xargs open"
  cis = "!gh ci-status"
  co = checkout
  compare = "!hub compare" 
  conflicts = !git ls-files -u | awk '{print $4}' | sort -u
  copysha = "!git rev-parse HEAD | tr -d '\n' | pbcopy"
  count = !git log --oneline | wc -l | awk '{print $1}'
  dc = diff --word-diff --cached --color-words
  df = diff --word-diff --color-words
  dup = "!git checkout develop && git pull && git checkout -"
  edit-conflicts = !$VISUAL `git conflicts`
  fall = "!for remote in $(git remote); do echo "Fetching $remote"; git fetch "$remote"; done"
  fpop = !git stash show -p | git apply && git stash drop
  full-commit = !git cat-file -p $(git rev-parse HEAD)
	glog = log -E -i --grep
  issues = !hub browse -- issues
  lnames = "!git --no-pager show --name-only $1"
  master = checkout master
  mb = "!git merge-base HEAD $1"
  mup = "!git checkout master && git pull && git checkout -"
  no-ff="merge --no-ff"
  pl = pull
  plr = pull --rebase
  pom = push -u origin master
  ps = push
  rbc = rebase --continue
  ri = rebase -i
  rid = rebase -i dev
  rim = !git rebase --interactive $(git merge-base master HEAD)
  riu = !git rebase -i $(git upstream)
  rmdeleted = "!git rm $(git ls-files --deleted)"
  rod = rebase dev
  rom = remote add origin
  rpo = remote prune origin
  sal = !git sla # Accepting that I will continue to mistype this
  si = status --ignored
  sl = log --oneline --decorate --graph -20
	sla = "log --oneline --decorate --graph --all -20"
  slap = "log --oneline --decorate --all --graph"
  slp = "log --oneline --decorate --graph"
  trust = !mkdir .git/safe
  unchange = checkout --
  unreleased = "!git l production/master..master"
  uncommit = reset --soft HEAD^
  unstage = reset
  upstream = "!git rev-parse --abbrev-ref --symbolic-full-name @{u}"
  ureset = "!git upstream && git reset --hard $(git upstream)"
  browse = !hub browse
  compare = !hub compare
  issues = !hub browse --issues

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[fetch]
  prune = true
[push]
  default = upstream
[merge]
  ff = only
